
 Entering Single Terminal Extractor
True:(Branch Cond:( Lor Next:(Terminal usb_test.send_data),(Terminal usb_test._rn0_tx_valid)) True:(Terminal usb_test._rn1_next_state) False:(Terminal usb_test._rn2_next_state))

 Terminal information:  send_data

*******************

Starting Flow at... 2023/07/08- 14 hr-56 m.-36 s
<pyverilog.dataflow.dataflow_analyzer.VerilogDataflowAnalyzer object at 0x7feb8cf03fd0>

 [0] List of keys:  usb_test.IDLE

 [1] List of keys:  usb_test.CRC1

 [2] List of keys:  usb_test.CRC2

 [3] List of keys:  usb_test.clk

 [4] List of keys:  usb_test.reset

 [5] List of keys:  usb_test.send_data

 [6] List of keys:  usb_test.tx_ready

 [7] List of keys:  usb_test.tx_valid

 [8] List of keys:  usb_test.buff

 [9] List of keys:  usb_test.current_state

 [10] List of keys:  usb_test.next_state



 These are the nodes for which dataflow trees can be generated : 

 [0] List of Binding keys:  usb_test.IDLE

 [1] List of Binding keys:  usb_test.CRC1

 [2] List of Binding keys:  usb_test.CRC2

 [3] List of Binding keys:  usb_test.current_state

 [4] List of Binding keys:  usb_test.tx_valid

 [5] List of Binding keys:  usb_test.next_state

 [6] List of Binding keys:  usb_test.buff


 Generating tree structure for selected node : 
 Pyverilog function call

 assign usb_test_next_state = (((usb_test_current_state==usb_test_IDLE)) ? ((usb_test_send_data) ? usb_test_CRC1 : usb_test_IDLE) : (((usb_test_current_state==usb_test_CRC1)) ? (((!usb_test_tx_ready)) ? usb_test_CRC2 : usb_test_CRC1) : (((usb_test_current_state==usb_test_CRC2)) ? ((usb_test_tx_ready) ? usb_test_IDLE : usb_test_CRC2) : ((1) ? usb_test_IDLE : usb_test_next_state))));

 modified function call

 PRINITNG data sotred in a :  ((usb_test_current_state==usb_test_IDLE) ) (usb_test_send_data ) |->  (usb_test_next_state == usb_test_CRC1 )
usb_test_next_state == usb_test_IDLE;


 ((usb_test_current_state==usb_test_CRC1) ) ((!usb_test_tx_ready) ) |->  (usb_test_next_state == usb_test_CRC2 )
usb_test_next_state == usb_test_CRC1;


 ((usb_test_current_state==usb_test_CRC2) ) (usb_test_tx_ready ) |->  (usb_test_next_state == usb_test_IDLE )
usb_test_next_state == usb_test_CRC2;


 (1 ) |->  (usb_test_next_state == usb_test_IDLE )






 
 Does a still have value outside the loop ?? 
  ((usb_test_current_state==usb_test_IDLE) ) (usb_test_send_data ) |->  (usb_test_next_state == usb_test_CRC1 )
usb_test_next_state == usb_test_IDLE;


 ((usb_test_current_state==usb_test_CRC1) ) ((!usb_test_tx_ready) ) |->  (usb_test_next_state == usb_test_CRC2 )
usb_test_next_state == usb_test_CRC1;


 ((usb_test_current_state==usb_test_CRC2) ) (usb_test_tx_ready ) |->  (usb_test_next_state == usb_test_IDLE )
usb_test_next_state == usb_test_CRC2;


 (1 ) |->  (usb_test_next_state == usb_test_IDLE )






 Data Type of a : <class 'str'>

 Printing line_buff : ['((usb_test_current_state==usb_test_IDLE) ) (usb_test_send_data ) |->  (usb_test_next_state == usb_test_CRC1 )', 'usb_test_next_state == usb_test_IDLE;', '', '', ' ((usb_test_current_state==usb_test_CRC1) ) ((!usb_test_tx_ready) ) |->  (usb_test_next_state == usb_test_CRC2 )', 'usb_test_next_state == usb_test_CRC1;', '', '', ' ((usb_test_current_state==usb_test_CRC2) ) (usb_test_tx_ready ) |->  (usb_test_next_state == usb_test_IDLE )', 'usb_test_next_state == usb_test_CRC2;', '', '', ' (1 ) |->  (usb_test_next_state == usb_test_IDLE )']

 XY  ((usb_test_current_state==usb_test_IDLE) ) (usb_test_send_data )  |->   (usb_test_next_state == usb_test_CRC1 )
